
name: RGR
services:
  api-lb:
    image: nginx:latest
    container_name: api-lb
    volumes:
      - ./API/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - api
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: API/Dockerfile
    deploy:
      mode: replicated
      replicas: 3
  orchestrator:
    container_name: orchestrator
    image: ${DOCKER_REGISTRY-}orchestrator
    build:
      context: .
      dockerfile: Orchestrator/Dockerfile
    depends_on:
      - rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmquser
      RABBITMQ_DEFAULT_PASS: rabbitmqpassword
  worker:
    image: ${DOCKER_REGISTRY-}worker
    build:
      context: .
      dockerfile: Worker/Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    environment:
        - "RMQ_HOST=rabbitmq"
        - "RMQ_PORT=5672"
        - "RMQ_USERNAME=rabbitmquser"
        - "RMQ_PASSWORD=rabbitmqpassword"
    depends_on:
      - rabbitmq
  workersync:
    image: ${DOCKER_REGISTRY-}workersync
    build:
      context: .
      dockerfile: WorkerSync/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      - redis
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

volumes:
  redis-data:
